{"version":3,"file":"static/js/928.c19299ed.chunk.js","mappings":"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","sources":["webpack://tweets/./src/components/UserItem/UserItem.module.css?e269","components/UserItem/UserItem.jsx","webpack://tweets/./src/components/UserList/UserList.module.css?8f44","pages/Tweets/Tweets.styled.js","components/UserList/UserList.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserItem_container__NNzyg\",\"containerImg\":\"UserItem_containerImg__OzFj8\",\"logo\":\"UserItem_logo__wh3nm\",\"img\":\"UserItem_img__ZxsRR\",\"border\":\"UserItem_border__2egT2\",\"circle\":\"UserItem_circle__ShM+M\",\"avatar\":\"UserItem_avatar__Ta8YI\",\"containerContent\":\"UserItem_containerContent__OscKq\",\"wrarText\":\"UserItem_wrarText__VSePN\",\"text\":\"UserItem_text__En7l2\",\"btn\":\"UserItem_btn__nCHJ0\",\"btnFollowing\":\"UserItem_btnFollowing__hPTtd\"};","\nimport { useState } from 'react';\nimport axios from \"axios\";\nimport css from './UserItem.module.css';\nimport image from '../../images/picture1.png';\nimport logo from '../../images/logo.png';\n\n\nconst UserItem = ({ id, tweets, followers, avatar, following, onUpdate }) => {\n    const [follower, setFollower] = useState(followers);\n    const [isFollowing, setIsFollowing] = useState(following);\n\n    const formatNunber = new Intl.NumberFormat('en-US').format(follower)\n\n    const userUpdate = async ({ id, followers, following }) => {\n        try {\n            const response = await axios.put(`/users/${id}`, { followers, following });\n            return response.data;\n        } catch (e) {\n            return console.log(e);\n        }\n    };\n\n    const handleUpdate = (id, follower, isFollowing) => {\n        if (isFollowing) {\n\n            const decrFollowers = follower - 1;\n            setFollower(decrFollowers)\n            setIsFollowing(false)\n            onUpdate(id, !isFollowing)\n            userUpdate({ id, followers: decrFollowers, following: false })\n        } else {\n            const incrFollowers = follower + 1;\n            setFollower(incrFollowers)\n            setIsFollowing(true)\n            onUpdate(id, !isFollowing)\n            userUpdate({ id, followers: incrFollowers, following: true })\n        }\n    };\n\n       \n    return (\n        <li className={css.container}>\n            <img src={logo} alt={'question'} className={css.logo} />\n            <div className={css.containerImg}>\n                <img src={image} alt={'question'} className={css.img} />\n            </div>\n            <div className={css.border}>\n                <div className={css.circle}>\n                    <img src={avatar} alt={'avatar'} className={css.avatar} />\n                </div>\n            </div>\n          \n            <div className={css.containerContent}>\n                <div className={css.wrarText}>\n                    <p className={css.text}> {tweets} tweets</p>\n                    <p className={css.text}> {formatNunber} Followers</p>\n                </div>\n                <button onClick={() => handleUpdate(id, follower, isFollowing)} type='button' className={isFollowing? css.btnFollowing : css.btn } >{isFollowing ? 'Following' : 'Follow' }</button>\n                 \n            </div>\n        </li>\n    );\n};\n\n\nexport default UserItem;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserList_container__5J0IZ\",\"listItems\":\"UserList_listItems__Bx-RF\",\"btnLoadMore\":\"UserList_btnLoadMore__TSPhk\",\"btnDisabled\":\"UserList_btnDisabled__kJ2p1\",\"select\":\"UserList_select__8N0au\",\"label\":\"UserList_label__mqzLU\"};","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport const BackLink= styled(NavLink)` \n    position: absolute;\n    left: 20px;\n    top:0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    \n    width: 160px;\n    height: 30px;\n    margin-left: 20px;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 1.22;\n    color: #373737;\n    border-radius: 10px;\n    background-color: #ebd8ff82;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n    border-color: transparent;\n    cursor: pointer;\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n        background-color: #e2d0f5ee;\n    }\n`;\n","import { useEffect , useState} from \"react\";\nimport  UserItem  from '../UserItem/UserItem';\nimport css from './UserList.module.css';\nimport axios from \"axios\";\n\n\nimport { useLocation } from 'react-router-dom';\nimport { BackLink } from '../../pages/Tweets/Tweets.styled';\nimport { HiArrowCircleLeft } from \"react-icons/hi\";\n\naxios.defaults.baseURL = \"https://648994ba5fa58521caafdd4d.mockapi.io\";\n\n\nconst UserList = () => {\n    const [dataUser, setDataUser] = useState([]);\n    const [visible, setVisible] = useState(3);\n    const [isLoading, setIsLoading] = useState(false);\n    const [filter, setFilter] = useState('show all');\n        \n\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    const userFetch = async () => {\n        try {\n            setIsLoading(true)\n            const response = await axios.get(\"/users\");\n            return response.data;\n        } catch (e) {\n            return console.log(e);\n        } finally {\n            setIsLoading(false)\n        }\n    };\n    \n    useEffect(() => {\n        userFetch().then(data => {\n            setDataUser(data)\n        }).catch(error => console.log(error))\n    }, []);\n\n        \n    \n    const showMoreItems = () => {\n        setVisible(prevValue => prevValue + 3)\n    };\n\n    const onFilterChange = event => {\n        setFilter(event.target.value);\n    };\n\n    const showFilteredTweets = () => {\n        if (filter === 'follow') {\n            return dataUser.filter(tweet => tweet.following === false);\n        } else if (filter === 'followings') {\n            return dataUser.filter(tweet => tweet.following === true);\n        } else {\n            return dataUser;\n        }\n    };\n\n    const showFilteredTweet = showFilteredTweets();\n    \n    const onUpdate = (id, isFollowing) => {\n        setDataUser((prevUsers) =>\n            prevUsers.map((user) =>\n                user.id === id? { ...user, following: isFollowing } : user\n            )\n        );\n                \n    };\n    \n    return (\n        <>\n            {!isLoading && <div className={css.container}>\n                \n                <BackLink to={backLinkHref}> <HiArrowCircleLeft size=\"24\" /> Back to Home</BackLink>\n                <label className={css.label}>\n                    Filter tweets:\n                    <select value={filter} onChange={onFilterChange} className={css.select}>\n                        <option value=\"show all\">show all</option>\n                        <option value=\"follow\">follow</option>\n                        <option value=\"followings\">followings</option>\n                    </select>\n                </label>\n               \n                <ul className={css.listItems} >\n                    {showFilteredTweet.slice(0, visible).map(({ id, tweets, followers, avatar, following }) => (\n                        <UserItem key={id} id={id} tweets={tweets} followers={followers} avatar={avatar} following={following} onUpdate={onUpdate} />\n                    ))}\n                </ul>\n                \n                {visible < dataUser.length && <button onClick={showMoreItems} type=\"button\" className={css.btnLoadMore}>Load More</button>}\n                {visible >= dataUser.length && <button onClick={showMoreItems} type=\"button\" disabled className={css.btnDisabled}>Load More</button>}\n           \n            </div>}\n           \n        </>\n    );\n};\n\nexport default UserList;\n","import UserList from '../../components/UserList/UserList';\n\n\nconst Tweets = () => {\n\n    return (\n        <>\n            <UserList/>\n        </>\n    )\n};\n\nexport default Tweets;"],"names":["id","tweets","followers","avatar","following","onUpdate","useState","follower","setFollower","isFollowing","setIsFollowing","formatNunber","Intl","NumberFormat","format","userUpdate","axios","response","data","console","log","className","css","src","logo","alt","image","onClick","decrFollowers","incrFollowers","handleUpdate","type","BackLink","styled","NavLink","dataUser","setDataUser","visible","setVisible","isLoading","setIsLoading","filter","setFilter","backLinkHref","useLocation","state","from","userFetch","useEffect","then","catch","error","showMoreItems","prevValue","showFilteredTweet","tweet","prevUsers","map","user","to","size","value","onChange","event","target","slice","length","disabled"],"sourceRoot":""}